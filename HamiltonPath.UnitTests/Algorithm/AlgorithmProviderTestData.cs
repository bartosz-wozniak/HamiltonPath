using System.Collections.Generic;
using HamiltonPath.BusinessLogic.Models;

namespace HamiltonPath.UnitTests.Algorithm
{
    internal static class AlgotithmProviderTestData
    {
        public static int[,] Graph2
            => new[,] {
                { 0, 1 },
                { 1, 0 }
            };

        public static Path Graph2Result => new Path
        {
            Cost = 1,
            Verticles = new List<int> { 0, 1 }
        };

        public static int[,] Graph3
            => new[,] {
                { 0, 1, 2 },
                { 1, 0, 1 },
                { 2, 1, 0 }
            };

        public static Path Graph3Result => new Path
        {
            Cost = 2,
            Verticles = new List<int> { 0, 1, 2 }
        };

        public static int[,] Graph4
            => new[,] {
                { 0, 1, 2, 3 },
                { 1, 0, 1, 8 },
                { 2, 1, 0, 1 },
                { 3, 8, 1, 0 }
            };

        public static Path Graph4Result => new Path
        {
            Cost = 3,
            Verticles = new List<int> { 0, 1, 2, 3 }
        };

        public static int[,] Graph5
            => new[,] {
                { 0, 1, 2, 3, 4 },
                { 1, 0, 1, 8, 7 },
                { 2, 1, 0, 1, 2 },
                { 3, 8, 1, 0, 1 },
                { 4, 7, 2, 1, 0 }
            };

        public static Path Graph5Result => new Path
        {
            Cost = 4,
            Verticles = new List<int> { 0, 1, 2, 3, 4 }
        };

        public static int[,] Graph6
            => new[,] {
                { 0, 1, 2, 3, 4, 4 },
                { 1, 0, 1, 8, 7, 5 },
                { 2, 1, 0, 1, 2, 6 },
                { 3, 8, 1, 0, 1, 7 },
                { 4, 7, 2, 1, 0, 1 },
                { 4, 5, 6, 7, 1, 0 }
            };

        public static Path Graph6Result => new Path
        {
            Cost = 5,
            Verticles = new List<int> { 0, 1, 2, 3, 4, 5 }
        };

        public static int[,] Graph7
            => new[,] {
                { 0, 1, 2, 3, 4, 4, 2 },
                { 1, 0, 1, 8, 7, 5, 3 },
                { 2, 1, 0, 1, 2, 6, 9 },
                { 3, 8, 1, 0, 1, 7, 8 },
                { 4, 7, 2, 1, 0, 1, 7 },
                { 4, 5, 6, 7, 1, 0, 1 },
                { 2, 3, 9, 8, 7, 1, 0 }
            };

        public static Path Graph7Result => new Path
        {
            Cost = 6,
            Verticles = new List<int> { 0, 1, 2, 3, 4, 5, 6 }
        };

        public static int[,] Graph8
            => new[,] {
                { 0, 1, 2, 3, 4, 4, 2, 2 },
                { 1, 0, 1, 8, 7, 5, 3, 2 },
                { 2, 1, 0, 1, 2, 6, 9, 2 },
                { 3, 8, 1, 0, 1, 7, 8, 2 },
                { 4, 7, 2, 1, 0, 1, 7, 2 },
                { 4, 5, 6, 7, 1, 0, 1, 2 },
                { 2, 3, 9, 8, 7, 1, 0, 1 },
                { 2, 2, 2, 2, 2, 2, 1, 0 }
            };

        public static Path Graph8Result => new Path
        {
            Cost = 7,
            Verticles = new List<int> { 0, 1, 2, 3, 4, 5, 6, 7 }
        };

        public static int[,] Graph9
            => new[,] {
                { 0, 1, 2, 3, 4, 4, 2, 2, 3 },
                { 1, 0, 1, 8, 7, 5, 3, 2, 3 },
                { 2, 1, 0, 1, 2, 6, 9, 2, 3 },
                { 3, 8, 1, 0, 1, 7, 8, 2, 3 },
                { 4, 7, 2, 1, 0, 1, 7, 2, 3 },
                { 4, 5, 6, 7, 1, 0, 1, 2, 3 },
                { 2, 3, 9, 8, 7, 1, 0, 1, 3 },
                { 2, 2, 2, 2, 2, 2, 1, 0, 1 },
                { 3, 3, 3, 3, 3, 3, 3, 1, 0 }
            };

        public static Path Graph9Result => new Path
        {
            Cost = 8,
            Verticles = new List<int> { 0, 1, 2, 3, 4, 5, 6, 7, 8 }
        };

        public static int[,] Graph10
            => new[,] {
                { 0, 1, 2, 3, 4, 4, 2, 2, 3, 4 },
                { 1, 0, 1, 8, 7, 5, 3, 2, 3, 4 },
                { 2, 1, 0, 1, 2, 6, 9, 2, 3, 4 },
                { 3, 8, 1, 0, 1, 7, 8, 2, 3, 4 },
                { 4, 7, 2, 1, 0, 1, 7, 2, 3, 4 },
                { 4, 5, 6, 7, 1, 0, 1, 2, 3, 4 },
                { 2, 3, 9, 8, 7, 1, 0, 1, 3, 4 },
                { 2, 2, 2, 2, 2, 2, 1, 0, 1, 4 },
                { 3, 3, 3, 3, 3, 3, 3, 1, 0, 1 },
                { 4, 4, 4, 4, 4, 4, 4, 4, 1, 0 }
            };

        public static Path Graph10Result => new Path
        {
            Cost = 9,
            Verticles = new List<int> { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
        };

        public static int[,] Graph11
            => new[,] {
                { 0, 1, 2, 3, 4, 4, 2, 2, 3, 4, 2 },
                { 1, 0, 1, 8, 7, 5, 3, 2, 3, 4, 2 },
                { 2, 1, 0, 1, 2, 6, 9, 2, 3, 4, 2 },
                { 3, 8, 1, 0, 1, 7, 8, 2, 3, 4, 2 },
                { 4, 7, 2, 1, 0, 1, 7, 2, 3, 4, 2 },
                { 4, 5, 6, 7, 1, 0, 1, 2, 3, 4, 2 },
                { 2, 3, 9, 8, 7, 1, 0, 1, 3, 4, 2 },
                { 2, 2, 2, 2, 2, 2, 1, 0, 1, 4, 2 },
                { 3, 3, 3, 3, 3, 3, 3, 1, 0, 1, 2 },
                { 4, 4, 4, 4, 4, 4, 4, 4, 1, 0, 1 },
                { 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0 },
            };

        public static Path Graph11Result => new Path
        {
            Cost = 10,
            Verticles = new List<int> { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
        };

        public static int[,] Graph12
            => new[,] {
                { 0, 1, 2, 3, 4, 4, 2, 2, 3, 4, 4, 5 },
                { 1, 0, 1, 8, 7, 5, 3, 2, 3, 4, 4, 5 },
                { 2, 1, 0, 1, 2, 6, 9, 2, 3, 4, 4, 5 },
                { 3, 8, 1, 0, 1, 7, 8, 2, 3, 4, 4, 5 },
                { 4, 7, 2, 1, 0, 1, 7, 2, 3, 4, 4, 5 },
                { 4, 5, 6, 7, 1, 0, 1, 2, 3, 4, 4, 5 },
                { 2, 3, 9, 8, 7, 1, 0, 1, 3, 4, 4, 5 },
                { 2, 2, 2, 2, 2, 2, 1, 0, 1, 4, 4, 5 },
                { 3, 3, 3, 3, 3, 3, 3, 1, 0, 1, 4, 5 },
                { 4, 4, 4, 4, 4, 4, 4, 4, 1, 0, 1, 5 },
                { 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 0, 1 },
                { 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0 }
            };

        public static Path Graph12Result => new Path
        {
            Cost = 11,
            Verticles = new List<int> { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
        };

        public static int[,] Graph13
        => new[,] {
            { 0, 1, 2, 3, 4, 4, 2, 2, 3, 4, 4, 5, 3 },
            { 1, 0, 1, 8, 7, 5, 3, 2, 3, 4, 4, 5, 3 },
            { 2, 1, 0, 1, 2, 6, 9, 2, 3, 4, 4, 5, 3 },
            { 3, 8, 1, 0, 1, 7, 8, 2, 3, 4, 4, 5, 3 },
            { 4, 7, 2, 1, 0, 1, 7, 2, 3, 4, 4, 5, 3 },
            { 4, 5, 6, 7, 1, 0, 1, 2, 3, 4, 4, 5, 3 },
            { 2, 3, 9, 8, 7, 1, 0, 1, 3, 4, 4, 5, 3 },
            { 2, 2, 2, 2, 2, 2, 1, 0, 1, 4, 4, 5, 3 },
            { 3, 3, 3, 3, 3, 3, 3, 1, 0, 1, 4, 5, 3 },
            { 4, 4, 4, 4, 4, 4, 4, 4, 1, 0, 1, 5, 3 },
            { 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 0, 1, 3 },
            { 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0, 1 },
            { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0 }
        };

        public static Path Graph13Result => new Path
        {
            Cost = 12,
            Verticles = new List<int> { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
        };

        public static int[,] Graph14
        => new[,] {
            { 0, 1, 2, 3, 4, 4, 2, 2, 3, 4, 4, 5, 3, 7 },
            { 1, 0, 1, 8, 7, 5, 3, 2, 3, 4, 4, 5, 3, 7 },
            { 2, 1, 0, 1, 2, 6, 9, 2, 3, 4, 4, 5, 3, 7 },
            { 3, 8, 1, 0, 1, 7, 8, 2, 3, 4, 4, 5, 3, 7 },
            { 4, 7, 2, 1, 0, 1, 7, 2, 3, 4, 4, 5, 3, 7 },
            { 4, 5, 6, 7, 1, 0, 1, 2, 3, 4, 4, 5, 3, 7 },
            { 2, 3, 9, 8, 7, 1, 0, 1, 3, 4, 4, 5, 3, 7 },
            { 2, 2, 2, 2, 2, 2, 1, 0, 1, 4, 4, 5, 3, 7 },
            { 3, 3, 3, 3, 3, 3, 3, 1, 0, 1, 4, 5, 3, 7 },
            { 4, 4, 4, 4, 4, 4, 4, 4, 1, 0, 1, 5, 3, 7 },
            { 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 0, 1, 3, 7 },
            { 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0, 1, 7 },
            { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 1 },
            { 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 1, 0 }
        };

        public static Path Graph14Result => new Path
        {
            Cost = 13,
            Verticles = new List<int> { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
        };

        public static int[,] Graph15
            => new[,] {
                { 0, 1, 2, 3, 4, 4, 2, 2, 3, 4, 4, 5, 3, 7, 6 },
                { 1, 0, 1, 8, 7, 5, 3, 2, 3, 4, 4, 5, 3, 7, 6 },
                { 2, 1, 0, 1, 2, 6, 9, 2, 3, 4, 4, 5, 3, 7, 6 },
                { 3, 8, 1, 0, 1, 7, 8, 2, 3, 4, 4, 5, 3, 7, 6 },
                { 4, 7, 2, 1, 0, 1, 7, 2, 3, 4, 4, 5, 3, 7, 6 },
                { 4, 5, 6, 7, 1, 0, 1, 2, 3, 4, 4, 5, 3, 7, 6 },
                { 2, 3, 9, 8, 7, 1, 0, 1, 3, 4, 4, 5, 3, 7, 6 },
                { 2, 2, 2, 2, 2, 2, 1, 0, 1, 4, 4, 5, 3, 7, 6 },
                { 3, 3, 3, 3, 3, 3, 3, 1, 0, 1, 4, 5, 3, 7, 6 },
                { 4, 4, 4, 4, 4, 4, 4, 4, 1, 0, 1, 5, 3, 7, 6 },
                { 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 0, 1, 3, 7, 6 },
                { 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0, 1, 7, 6 },
                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 1, 6 },
                { 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 1, 0, 1 },
                { 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 1, 0 }
            };

        public static Path Graph15Result => new Path
        {
            Cost = 14,
            Verticles = new List<int> { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
        };

        public static int[,] InvalidGraphDiagonal
            => new[,] {
                { 0, 1, 2, 3, 4, 4, 2, 2, 3, 4, 4, 5, 3, 7, 6 },
                { 1, 0, 1, 8, 7, 5, 3, 2, 3, 4, 4, 5, 3, 7, 6 },
                { 2, 1, 3, 1, 2, 6, 9, 2, 3, 4, 4, 5, 3, 7, 6 },
                { 3, 8, 1, 0, 1, 7, 8, 2, 3, 4, 4, 5, 3, 7, 6 },
                { 4, 7, 2, 1, 0, 1, 7, 2, 3, 4, 4, 5, 3, 7, 6 },
                { 4, 5, 6, 7, 1, 0, 1, 2, 3, 4, 4, 5, 3, 7, 6 },
                { 2, 3, 9, 8, 7, 1, 0, 1, 3, 4, 4, 5, 3, 7, 6 },
                { 2, 2, 2, 2, 2, 2, 1, 0, 1, 4, 4, 5, 3, 7, 6 },
                { 3, 3, 3, 3, 3, 3, 3, 1, 0, 1, 4, 5, 3, 7, 6 },
                { 4, 4, 4, 4, 4, 4, 4, 4, 1, 0, 1, 5, 3, 7, 6 },
                { 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 0, 1, 3, 7, 6 },
                { 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0, 1, 7, 6 },
                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 1, 6 },
                { 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 1, 0, 1 },
                { 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 1, 0 }
            };

        public static int[,] InvalidGraphNotSymetric
            => new[,] {
                { 0, 1, 2, 3, 4, 4, 2, 2, 3, 4, 4, 5, 3, 7, 6 },
                { 1, 0, 1, 8, 7, 5, 3, 2, 3, 4, 4, 5, 3, 7, 6 },
                { 2, 1, 0, 1, 2, 6, 9, 2, 3, 4, 4, 5, 3, 7, 6 },
                { 3, 8, 1, 0, 1, 7, 8, 2, 3, 4, 4, 5, 3, 7, 6 },
                { 4, 7, 2, 1, 0, 1, 7, 2, 3, 4, 4, 5, 3, 7, 6 },
                { 4, 5, 6, 7, 1, 0, 1, 2, 3, 4, 4, 5, 3, 7, 6 },
                { 2, 3, 9, 8, 7, 1, 0, 1, 3, 4, 4, 5, 3, 7, 6 },
                { 2, 2, 2, 2, 2, 2, 1, 0, 1, 4, 4, 5, 3, 7, 6 },
                { 3, 3, 3, 3, 3, 3, 3, 1, 0, 1, 4, 5, 3, 7, 6 },
                { 4, 4, 4, 4, 4, 4, 4, 4, 1, 0, 1, 5, 3, 7, 6 },
                { 4, 4, 5, 4, 4, 4, 4, 4, 4, 1, 0, 1, 3, 7, 6 },
                { 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0, 1, 7, 6 },
                { 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 1, 6 },
                { 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 1, 0, 1 },
                { 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 1, 0 }
            };
    }
}
